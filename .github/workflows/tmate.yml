name: Create VPS (Auto Restart)

on:
  workflow_dispatch:
  repository_dispatch:
    types: [create-vps]

env:
  VPS_NAME: vps-project-1757284306519
  TMATE_SERVER: nyc1.tmate.io
  GITHUB_TOKEN_VPS: ${{ secrets.GH_TOKEN }}
  NGROK_SERVER_URL: https://vps-github-datlohehe.vercel.app

jobs:
  deploy:
    runs-on: windows-latest
    permissions:
      contents: write
      actions: write

    steps:
    - name: ‚¨áÔ∏è Checkout source
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_TOKEN }}

    - name: üêç T·∫°o file VPS info
      run: |
        mkdir -Force links
        "VPS kh·ªüi t·∫°o - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" | Out-File -FilePath "links/vps-project-1757284306519.txt" -Encoding UTF8

    - name: üñ•Ô∏è C√†i ƒë·∫∑t v√† ch·∫°y TightVNC, noVNC, Cloudflared
  shell: pwsh
  run: |
    Write-Host "üì• Installing TightVNC, noVNC, and Cloudflared..."
    
    try {
      # ... (ph·∫ßn c√†i ƒë·∫∑t TightVNC gi·ªØ nguy√™n)
      
      Write-Host "üì• Installing Python dependencies for noVNC and websockify..."
      # ... (ph·∫ßn c√†i ƒë·∫∑t pip gi·ªØ nguy√™n)
      
      Write-Host "üîç Checking noVNC installation via pip..."
      try {
        $novncInfo = pip show novnc
        Write-Host "üìú noVNC package info:"
        Write-Host $novncInfo
        $novncPath = ($novncInfo | Select-String "Location: (.*)").Matches.Groups[1].Value + "\novnc"
        if (Test-Path "$novncPath") {
          dir $novncPath -Recurse | Write-Host
          if (-not (Test-Path "$novncPath/vnc.html")) {
            Write-Host "‚ùå noVNC directory is incomplete, vnc.html not found"
            Write-Host "üîÑ Falling back to GitHub download..."
            $maxDownloadAttempts = 5
            for ($i = 1; $i -le $maxDownloadAttempts; $i++) {
              try {
                Write-Host "üì• Downloading custom noVNC from Cudatto1m (attempt $i/$maxDownloadAttempts)..."
                Remove-Item -Recurse -Force noVNC -ErrorAction SilentlyContinue
                $novncUrl = "https://github.com/Cudatto1m/noVNC-Custom/archive/refs/heads/master.zip"
                Write-Host "üîó Using URL: $novncUrl"
                $response = Invoke-WebRequest -Uri $novncUrl -OutFile "noVNC.zip" -TimeoutSec 60 -PassThru
                Write-Host "‚ÑπÔ∏è HTTP Status: $($response.StatusCode) $($response.StatusDescription)"
                Expand-Archive -Path "noVNC.zip" -DestinationPath "." -Force
                Move-Item -Path "noVNC-Custom-master" -Destination "noVNC" -Force
                Write-Host "‚úÖ Custom noVNC downloaded and extracted"
                $novncPath = "noVNC"
                break
              } catch {
                Write-Host "‚ö†Ô∏è Custom noVNC download attempt $i/$maxDownloadAttempts failed: $_"
                if ($i -eq $maxDownloadAttempts) {
                  Write-Host "‚ùå Failed to download custom noVNC"
                  exit 1
                }
                Start-Sleep -Seconds 10
              }
            }
          }
        } else {
          Write-Host "‚ùå noVNC directory does not exist, downloading custom noVNC..."
          $maxDownloadAttempts = 5
          for ($i = 1; $i -le $maxDownloadAttempts; $i++) {
            try {
              Write-Host "üì• Downloading custom noVNC from Cudatto1m (attempt $i/$maxDownloadAttempts)..."
              Remove-Item -Recurse -Force noVNC -ErrorAction SilentlyContinue
              $novncUrl = "https://github.com/Cudatto1m/noVNC-Custom/archive/refs/heads/master.zip"
              Write-Host "üîó Using URL: $novncUrl"
              $response = Invoke-WebRequest -Uri $novncUrl -OutFile "noVNC.zip" -TimeoutSec 60 -PassThru
              Write-Host "‚ÑπÔ∏è HTTP Status: $($response.StatusCode) $($response.StatusDescription)"
              Expand-Archive -Path "noVNC.zip" -DestinationPath "." -Force
              Move-Item -Path "noVNC-Custom-master" -Destination "noVNC" -Force
              Write-Host "‚úÖ Custom noVNC downloaded and extracted"
              $novncPath = "noVNC"
              break
            } catch {
              Write-Host "‚ö†Ô∏è Custom noVNC download attempt $i/$maxDownloadAttempts failed: $_"
              if ($i -eq $maxDownloadAttempts) {
                Write-Host "‚ùå Failed to download custom noVNC"
                exit 1
              }
              Start-Sleep -Seconds 10
            }
          }
        }
      } catch {
        Write-Host "‚ö†Ô∏è Failed to check noVNC package via pip, downloading custom noVNC..."
        $maxDownloadAttempts = 5
        for ($i = 1; $i -le $maxDownloadAttempts; $i++) {
          try {
            Write-Host "üì• Downloading custom noVNC from Cudatto1m (attempt $i/$maxDownloadAttempts)..."
            Remove-Item -Recurse -Force noVNC -ErrorAction SilentlyContinue
            $novncUrl = "https://github.com/Cudatto1m/noVNC-Custom/archive/refs/heads/master.zip"
            Write-Host "üîó Using URL: $novncUrl"
            $response = Invoke-WebRequest -Uri $novncUrl -OutFile "noVNC.zip" -TimeoutSec 60 -PassThru
            Write-Host "‚ÑπÔ∏è HTTP Status: $($response.StatusCode) $($response.StatusDescription)"
            Expand-Archive -Path "noVNC.zip" -DestinationPath "." -Force
            Move-Item -Path "noVNC-Custom-master" -Destination "noVNC" -Force
            Write-Host "‚úÖ Custom noVNC downloaded and extracted"
            $novncPath = "noVNC"
            break
          } catch {
            Write-Host "‚ö†Ô∏è Custom noVNC download attempt $i/$maxDownloadAttempts failed: $_"
            if ($i -eq $maxDownloadAttempts) {
              Write-Host "‚ùå Failed to download custom noVNC"
              exit 1
            }
            Start-Sleep -Seconds 10
          }
        }
      }
      
    - name: üîÑ Auto Restart Workflow
      if: always()
      run: |
        $lockFile = "restart.lock"
        $currentTime = Get-Date -Format 'yyyy-MM-dd HH:mm:ss'
        
        "RESTART_$(Get-Date -Format 'yyyyMMdd_HHmmss')" | Out-File -FilePath $lockFile -Encoding UTF8
        
        Write-Host "üîÅ Initiating workflow restart at $currentTime"
        
        try {
          Stop-Process -Name "cloudflared" -Force -ErrorAction SilentlyContinue
          Stop-Process -Name "python" -Force -ErrorAction SilentlyContinue
          Stop-Process -Name "tvnserver" -Force -ErrorAction SilentlyContinue
        } catch {
          Write-Host "‚ö†Ô∏è Process cleanup failed: $_"
        }
        
        Start-Sleep -Seconds 10
        
        try {
          $headers = @{ "Accept" = "application/vnd.github+json"; "Authorization" = "Bearer $env:GITHUB_TOKEN_VPS"; "Content-Type" = "application/json"; "X-GitHub-Api-Version" = "2022-11-28" }
          
          $payload = @{ event_type = "create-vps"; client_payload = @{ vps_name = "vps-project-1757284306519"; restart_time = $currentTime; auto_restart = $true } } | ConvertTo-Json -Depth 2
          
          Invoke-RestMethod -Uri "https://api.github.com/repos/Cudatto1m/vps-project-1757284306519/dispatches" -Method Post -Headers $headers -Body $payload -TimeoutSec 30
          Write-Host "‚úÖ Workflow restart triggered"
          
          git add $lockFile
          git commit -m "üîÑ Auto restart - $currentTime" --allow-empty
          git push origin main --force-with-lease
          
        } catch {
          Write-Host "‚ùå Restart failed: $_"
          Remove-Item $lockFile -Force -ErrorAction SilentlyContinue
          exit 1
        }
